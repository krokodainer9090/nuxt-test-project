@mixin media-query($width: '') {
  @if $width == '' {
    @content;
  } @else {
    @media screen and (min-width: $width) {
      @content;
    }
  }
}

// Use if padding in design not 15px
@mixin cols_gutter($size: '') {
  $gutters: map-get-strict($col_gutters, $size);
  @each $size, $gutter in $gutters {
    $breakpoint: map-get-strict($breakpoints, $size);
    @include media-query($breakpoint) {
      padding-left: $gutter;
      padding-right: $gutter;
    }
  }
}

@mixin create-order($size: '') {
  @for $index from 1 through $columns_count {
    .order#{$size}-#{$index} {
      order: $index;
    }
  }
}

@mixin create-grid($size: '') {

  $local_gutter: map-get-strict($row_gutters, $size);

  %col-std#{$size} {
    padding-left: 15px;
    padding-right: 15px;
    //@include cols_gutter($size)
  }

  %col-std-width#{$size} {
    width: 100%;
    padding-left: 15px;
    padding-right: 15px;
    //@include cols_gutter($size)
  }

  .col#{$size} {
    @extend %col-std#{$size};
    flex-basis: 0;
    flex-grow: 1;
    width: auto;
    max-width: 100%;
  }

  .col#{$size}-auto {
    @extend %col-std#{$size};
    flex: 0 0 auto;
    width: auto;
    max-width: 100%;
  }

  @for $index from 1 through $columns_count {
    .col#{$size}-#{$index} {
      @extend %col-std-width#{$size};
      $percent: ($index / $columns_count) * 100%;
      flex: 0 0 $percent;
      max-width:  $percent;
    }
  }
}
